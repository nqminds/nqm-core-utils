{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 2eda463bc2bcee387115","webpack:///./src/constants.js","webpack:///external {\"commonjs\":\"lodash\",\"commonjs2\":\"lodash\",\"amd\":\"_\",\"root\":\"_\"}","webpack:///./src/short-hash.js","webpack:///external \"debug\"","webpack:///./src/build-data-key.js","webpack:///./src/databot-utils.js","webpack:///./src/flatten.js","webpack:///./src/resource-utils.js","webpack:///./src/schema-utils.js","webpack:///external \"shortid\"","webpack:///./src/index.js","webpack:///external \"mongo-parse\""],"names":["readAccess","writeAccess","publicRWShareMode","publicROShareMode","trustedShareMode","resourceEventType","accountEventType","mongooseTypes","vocabularyResourceType","schemaResourceType","datasetResourceType","visualisationResourceType","groupResourceType","rootGroupResourceType","rawFileResourceType","applicationBaseType","applicationDefinitionResourceType","databotBaseType","databotDefinitionResourceType","databotHostResourceType","resourceRootGroupResourceType","scratchGroupResourceType","datasetFilterResourceType","geojsonResourceType","widgetVisualisationResourceType","timeSeriesVisualisationResourceType","mapVisualisationResourceType","statusVisualisationResourceType","databotRootGroupResourceType","databotDefinitionGroupResourceType","databotHostGroupResourceType","databotInstanceGroupResourceType","databotControllerResourceType","applicationRootGroupResourceType","applicationDefinitionGroupResourceType","applicationServerGroupResourceType","applicationDataGroupResourceType","databotInstancesResourceType","databotInstanceOutputResourceType","databotProcessesResourceType","activeDatabotHostsResourceType","userAccountType","tokenAccountType","hostAccountType","applicationAccountType","schemasResourceId","vocabularyResourceId","npmDatabotType","inlineDatabotType","zipDatabotType","githubDatabotType","urlDatabotType","browserHostType","serverHostType","databotInstancesResourceId","databotInstanceOutputResourceId","databotProcessesResourceId","activeDatabotHostsResourceId","unallocatedDatabotStatus","pendingDatabotStatus","installingDatabotStatus","partRunningDatabotStatus","runningDatabotStatus","pausedDatabotStatus","stoppingDatabotStatus","completeDatabotStatus","errorDatabotStatus","immediateDatabotInstanceRunMode","alwaysDatabotInstanceRunMode","scheduledDatabotInstanceRunMode","datasetImportDatabot","datasetCopyDatabot","onlineHostStatus","offlineHostStatus","idleHostStatus","busyHostStatus","errorHostStatus","resourceVocabularyId","datasetVocabularyId","folderVocabularyId","rawFileVocabularyId","visualisationVocabularyId","schemaVocabularyId","databotDefinitionVocabularyId","urlVocabularyId","builtIndexStatus","pendingIndexStatus","suspendingIndexStatus","suspendedIndexStatus","errorIndexStatus","googleAuthService","localAuthService","guestAccount","maxTimestamp","datasetStorePrefix","rootFolderPrefix","rootFolderName","scratchFolderPrefix","scratchFolderName","scratchFolderAlias","resourceRootFolderPrefix","resourceRootFolderName","applicationRootFolderPrefix","applicationRootFolderName","applicationDefinitionFolderPrefix","applicationDefinitionFolderName","applicationServerFolderPrefix","applicationServerFolderName","applicationDataFolderPrefix","applicationDataFolderName","applicationServerDataFolderPrefix","databotRootFolderPrefix","databotRootFolderName","databotDefinitionFolderPrefix","databotDefinitionFolderName","databotHostFolderPrefix","databotHostFolderName","databotInstanceFolderPrefix","databotInstanceFolderName","userOwnershipMode","appOwnershipMode","impersonateAccessMode","shareAccessMode","identityFilterPlaceholder","authenticateApplicationId","toolboxApplicationId","bitwise","str","hash","length","i","ch","charCodeAt","binaryTransfer","integer","binary","stack","num","result","sign","table","t","Math","abs","floor","push","unique","text","id","replace","errLog","buildDataKey","fieldPaths","params","failIfIncomplete","keys","forEach","f","key","asc","desc","pointers","DotNotationPointers","val","Error","JSON","stringify","isDatabotInstanceRunning","databotInstance","status","flattenJSON","data","recurse","cur","prop","Object","Array","isArray","l","isEmpty","p","pureResourceTypes","isResourceType","resource","type","schemaDefinition","basedOn","indexOf","baseType","getResourceTypeText","scheduledTasksResourceType","processHostsResourceType","getShareModeText","shareMode","display","primaryKeyFromFlattened","datum","uniqueIndex","idx","keyField","getAccountRootId","accountId","specialFolderId","getResourceRootId","getApplicationRootId","getApplicationDefinitionId","getApplicationDataId","getDatabotRootId","getDefaultResourceParent","rootId","isPureResource","prefix","log","reservedFieldNames","indexToTDX","indexFields","errList","tdxIndex","fieldSpec","sortDirection","indexToMongoose","index","mongooseIndex","validateTDXType","properType","toLowerCase","schemaToTDX","schema","value","__tdxType","concat","validateMongooseType","capitalize","schemaToMongoose","forDisplay","each","v","k","required","__tdxRequired","default","__tdxDefault","description","__tdxDescription","definitionToMongoose","name","tdxSchema","indexes","nonUniqueIndexes","nonUniqueIndex","primaryIndex","dataSchema","mongooseSchema","join","cloneDeep","isEmailValid","address","test","isHostNameValid","hostname","isDateValid","d","prototype","toString","call","isNaN","getTime","isNumeric","n","parseFloat","isFinite","makeTDXAccount","email","tdx","splitTDXAccount","username","split","makeTDXResource","splitTDXResource","resourceId","padNumber","width","z","parseFunction","funcText","funcReg","match","exec","Function","constants","databotUtils","shortId","resourceUtils","schemaUtils","shortHash"],"mappings":"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","file":"nqm-core-utils.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"), require(\"debug\"), require(\"shortid\"), require(\"mongo-parse\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"nqm-core-utils\", [\"_\", \"debug\", \"shortid\", \"mongo-parse\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"nqm-core-utils\"] = factory(require(\"lodash\"), require(\"debug\"), require(\"shortid\"), require(\"mongo-parse\"));\n\telse\n\t\troot[\"nqm-core-utils\"] = factory(root[\"_\"], root[\"debug\"], root[\"shortid\"], root[\"mongo-parse\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_11__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2eda463bc2bcee387115","/* eslint-disable key-spacing, max-len */\nexport default {\n  // Resource access types\n  readAccess:  \"r\",\n  writeAccess: \"w\",\n\n  // Share modes\n  publicRWShareMode: \"pw\",    // public read and write\n  publicROShareMode: \"pr\",    // public read, trusted write\n  trustedShareMode:  \"tr\",    // trusted only\n\n  // Event types\n  resourceEventType: \"Resource\",\n  accountEventType:  \"Account\",\n\n  mongooseTypes: {\n    \"string\": 1,\n    \"number\": 1,\n    \"date\": 1,\n    \"boolean\": 1,\n  },\n\n  // Resource types (schema ids)\n  vocabularyResourceType:                 \"vocabulary\",\n  schemaResourceType:                     \"schema\",\n  datasetResourceType:                    \"dataset\",\n  visualisationResourceType:              \"visualisation\",\n  groupResourceType:                      \"resourceGroup\",             // generic folder\n  rootGroupResourceType:                  \"rootGroup\",                 // user root folder - holds all account resources\n  rawFileResourceType:                    \"rawFile\",\n  applicationBaseType:                    \"applicationBase\",\n  applicationDefinitionResourceType:      \"applicationDefinition\",     // system resources that mirror applicationAccountType accounts to enable sharing\n  databotBaseType:                        \"databot\",                   // base of all things 'databot'\n  databotDefinitionResourceType:          \"databotDefinition\",         // a databot definition\n  databotHostResourceType:                \"databotHost\",               // system resources that mirror hostAccountType accounts to enable sharing\n\n  resourceRootGroupResourceType:          \"resourceRootGroup\",         // folder for all 'pure' resources (non-databot or application)\n  scratchGroupResourceType:               \"scratchGroup\",\n  datasetFilterResourceType:              \"datasetFilter\",\n  geojsonResourceType:                    \"geojson\",\n\n  widgetVisualisationResourceType:        \"widgetVisualisation\",\n  timeSeriesVisualisationResourceType:    \"timeSeriesVisualisation\",\n  mapVisualisationResourceType:           \"mapVisualisation\",\n  statusVisualisationResourceType:        \"statusVisualisation\",\n\n  databotRootGroupResourceType:           \"databotRootGroup\",\n  databotDefinitionGroupResourceType:     \"databotGroup\",\n  databotHostGroupResourceType:           \"databotHostGroup\",\n  databotInstanceGroupResourceType:       \"databotInstanceGroup\",\n  databotControllerResourceType:          \"databotController\",\n\n  applicationRootGroupResourceType:       \"applicationRootGroup\",\n  applicationDefinitionGroupResourceType: \"applicationDefinitionGroup\",\n  applicationServerGroupResourceType:     \"applicationServerGroup\",\n  applicationDataGroupResourceType:       \"applicationDataGroup\",\n\n  // databot management resources\n  databotInstancesResourceType:           \"databotInstances\",          // system resource storing details of running databot instances\n  databotInstanceOutputResourceType:      \"databotInstanceOutput\",     // system resource storing databot instance output\n  databotProcessesResourceType:           \"databotProcesses\",          // system resource storing databot process info\n  activeDatabotHostsResourceType:         \"activeDatabotHosts\",        // system resource storing details of active databot hosts\n\n  // Account types\n  userAccountType:  \"user\",\n  tokenAccountType: \"token\",\n  hostAccountType: \"host\",\n  applicationAccountType: \"application\",\n\n  // Default schema resource\n  schemasResourceId: \"__schemas__\",\n\n  // Default vocabulary resource\n  vocabularyResourceId: \"__vocab__\",\n\n  // Databot stuff.\n  npmDatabotType: \"npm\",\n  inlineDatabotType: \"script\",\n  zipDatabotType: \"zip\",\n  githubDatabotType: \"github\",\n  urlDatabotType: \"url\",\n\n  browserHostType: \"browser\",\n  serverHostType:  \"server\",\n\n  databotInstancesResourceId:      \"__databotInstances__\",\n  databotInstanceOutputResourceId: \"__databotInstanceOutput__\",\n  databotProcessesResourceId:      \"__databotProcesses__\",\n  activeDatabotHostsResourceId:    \"__activeDatabotHosts__\",\n\n  unallocatedDatabotStatus: \"unallocated\",\n  pendingDatabotStatus:     \"pending\",\n  installingDatabotStatus:  \"installing\",\n  partRunningDatabotStatus: \"partRunning\",\n  runningDatabotStatus:     \"running\",\n  pausedDatabotStatus:      \"paused\",\n  stoppingDatabotStatus:    \"stopping\",\n  completeDatabotStatus:    \"complete\",\n  errorDatabotStatus:       \"error\",\n\n  immediateDatabotInstanceRunMode: \"run-now\",\n  alwaysDatabotInstanceRunMode:    \"run-always\",\n  scheduledDatabotInstanceRunMode: \"scheduled\",\n\n  // Privileged databots\n  datasetImportDatabot:     \"__datasetImport__\",\n  datasetCopyDatabot:       \"__datasetCopy__\",\n\n  onlineHostStatus:  \"online\",\n  offlineHostStatus: \"offline\",\n  idleHostStatus:    \"idle\",\n  busyHostStatus:    \"busy\",\n  errorHostStatus:   \"error\",\n\n  resourceVocabularyId:          \"ResourceId\",\n  datasetVocabularyId:           \"DatasetId\",\n  folderVocabularyId:            \"FolderId\",\n  rawFileVocabularyId:           \"RawFileId\",\n  visualisationVocabularyId:     \"VisualisationId\",\n  schemaVocabularyId:            \"SchemaId\",\n  databotDefinitionVocabularyId: \"DatabotDefinitionId\",\n  urlVocabularyId:               \"Url\",\n\n  // Index status\n  builtIndexStatus:      \"built\",\n  pendingIndexStatus:    \"pending\",\n  suspendingIndexStatus: \"suspending\",\n  suspendedIndexStatus:  \"suspended\",\n  errorIndexStatus:      \"error\",\n\n  // Authentication services\n  googleAuthService:     \"oauth:google\",\n  localAuthService:      \"local\",\n\n  // Misc\n  guestAccount: \"...guest...\",\n  maxTimestamp: 8640000000000000,\n  datasetStorePrefix: \"dataset.\",\n\n  // Special folders\n  rootFolderPrefix: \"r.\",\n  rootFolderName: \"root\",\n\n  scratchFolderPrefix: \"s.\",\n  scratchFolderName: \"scratch\",\n  scratchFolderAlias: \"__scratch__\",      // Used in code to refer to the current users scratch folder.\n\n  resourceRootFolderPrefix: \"rs.\",\n  resourceRootFolderName: \"resources\",\n\n  applicationRootFolderPrefix: \"a.\",\n  applicationRootFolderName: \"applications\",\n\n  applicationDefinitionFolderPrefix: \"adef.\",\n  applicationDefinitionFolderName: \"application definitions\",\n\n  applicationServerFolderPrefix: \"as.\",\n  applicationServerFolderName: \"application servers\",\n\n  applicationDataFolderPrefix: \"ad.\",\n  applicationDataFolderName: \"application data\",\n\n  // For application-specific folders where app servers can store data.\n  // Created as sub-folders of applicationServerFolderPrefix.\n  // Will use the application name, e.g. \"careshare server data\".\n  applicationServerDataFolderPrefix: \"adat.\",\n\n  databotRootFolderPrefix: \"dbr.\",\n  databotRootFolderName: \"databots\",\n\n  databotDefinitionFolderPrefix: \"db.\",\n  databotDefinitionFolderName: \"databot definitions\",\n\n  databotHostFolderPrefix: \"dh.\",\n  databotHostFolderName: \"databot hosts\",\n\n  databotInstanceFolderPrefix: \"dbi.\",\n  databotInstanceFolderName: \"databot instances\",\n\n  // Application data ownership modes\n  userOwnershipMode: \"user\",\n  appOwnershipMode: \"application\",\n\n  // Application data access modes\n  impersonateAccessMode: \"impersonate\",\n  shareAccessMode: \"shared\",\n\n  // Identity filter placeholder\n  identityFilterPlaceholder: \"@@_identity_@@\",\n\n  // Application ids\n  authenticateApplicationId: \"__authenticate__\",\n  toolboxApplicationId: \"__toolbox__\",\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants.js","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"lodash\",\"commonjs2\":\"lodash\",\"amd\":\"_\",\"root\":\"_\"}\n// module id = 1\n// module chunks = 0","/* eslint-disable */\n/*\n\tshorthash\n\t(c) 2013 Bibig\n\t\n\thttps://github.com/bibig/node-shorthash\n\tshorthash may be freely distributed under the MIT license.\n*/\n\n// refer to: http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\nfunction bitwise(str){\n\tvar hash = 0;\n\tif (str.length == 0) return hash;\n\tfor (var i = 0; i < str.length; i++) {\n\t\tvar ch = str.charCodeAt(i);\n\t\thash = ((hash<<5)-hash) + ch;\n\t\thash = hash & hash; // Convert to 32bit integer\n\t}\n\treturn hash;\n}\n\n// 10进制转化成62进制以内的进制\n// convert 10 binary to customized binary, max is 62\nfunction binaryTransfer(integer, binary) {\n\tbinary = binary || 62;\n\tvar stack = [];\n\tvar num;\n\tvar result = '';\n\tvar sign = integer < 0 ? '-' : '';\n\t\n\tfunction table (num) {\n\t\tvar t = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\t\treturn t[num];\n\t}\n\t\n\tinteger = Math.abs(integer);\n\t\n\twhile (integer >= binary) {\n\t\tnum = integer % binary;\n\t\tinteger = Math.floor(integer / binary);\n\t\tstack.push(table(num));\n\t}\n\t\n\tif (integer > 0) {\n\t\tstack.push(table(integer));\n\t}\n\t\n\tfor (var i = stack.length - 1; i >= 0; i--) {\n\t\tresult += stack[i];\n\t} \n\t\n\treturn sign + result;\n}\n\n\n/**\n * why choose 61 binary, because we need the last element char to replace the minus sign\n * eg: -aGtzd will be ZaGtzd\n */\nfunction unique (text) {\n\tvar id = binaryTransfer(bitwise(text), 61);\n\treturn id.replace('-', 'Z');\n}\n\nexport default {\n  bitwise,\n  binaryTransfer,\n  unique\n};\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/short-hash.js","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"debug\"\n// module id = 3\n// module chunks = 0","import debug from \"debug\";\nimport parser from \"mongo-parse\";\nimport _ from \"lodash\";\n\nconst errLog = debug(\"nqm-core-utils:build-data-key\");\n\n/*\n  * Extract a dictionary of values from params corresponding to the given array of field paths,\n  * where paths use the dot notation, e.g. address.postcode.\n  */\nconst buildDataKey = function(fieldPaths, params, failIfIncomplete) {\n  const keys = {};\n  _.forEach(fieldPaths, function(f) {\n    // Get the field path.\n    const key = f.asc || f.desc;\n    const pointers = parser.DotNotationPointers(params, key);\n    if (pointers.length === 0 || typeof pointers[0].val === \"undefined\") {\n      errLog(\"no key data for field '%s' in %j\", key, params);\n      if (failIfIncomplete) {\n        throw new Error(`buildDataKey - incomplete primary key: no data for '${key}' in ${JSON.stringify(params)}`);\n      }\n    } else {\n      keys[key] = pointers[0].val;\n    }\n  });\n\n  return keys;\n};\n\nexport default buildDataKey;\n\n\n\n// WEBPACK FOOTER //\n// ./src/build-data-key.js","import constants from \"./constants\";\n\nconst isDatabotInstanceRunning = function(databotInstance) {\n  return databotInstance && (\n    databotInstance.status === constants.runningDatabotStatus ||\n    databotInstance.status === constants.installingDatabotStatus ||\n    databotInstance.status === constants.partRunningDatabotStatus ||\n    databotInstance.status === constants.pausedDatabotStatus\n  );\n};\n\nexport default {\n  isDatabotInstanceRunning: isDatabotInstanceRunning,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/databot-utils.js","const flattenJSON = function(data) {\n  const result = {};\n  function recurse(cur, prop) {\n    if (Object(cur) !== cur) {\n      result[prop] = cur;\n    } else if (Array.isArray(cur)) {\n      const l = cur.length;\n      for (let i = 0; i < l; i++) {\n        recurse(cur[i], `${prop}.${i}`);\n      }\n      if (l === 0)\n        result[prop] = [];\n    } else {\n      let isEmpty = true;\n      for (const p in cur) {\n        isEmpty = false;\n        recurse(cur[p], prop ? `${prop}.${p}` : p);\n      }\n      if (isEmpty && prop)\n        result[prop] = {};\n    }\n  }\n  recurse(data, \"\");\n  return result;\n};\n\nexport default flattenJSON;\n\n\n\n// WEBPACK FOOTER //\n// ./src/flatten.js","import constants from \"./constants\";\nimport _ from \"lodash\";\nimport shortHash from \"./short-hash\";\n\n// A 'pure' resource is any non-databot and non-application resource.\nconst pureResourceTypes = [\n  constants.datasetResourceType,\n  constants.groupResourceType,\n  constants.rawFileResourceType,\n];\n\nconst isResourceType = function(resource, type) {\n  resource = resource || {};\n  return (\n    resource.schemaDefinition ?\n    (resource.schemaDefinition.id === type || (resource.schemaDefinition.basedOn && resource.schemaDefinition.basedOn.indexOf(type) >= 0)) :  // eslint-disable-line max-len\n    resource.baseType === type\n  );\n};\n\nconst getResourceTypeText = function(type) {\n  let text;\n  switch (type) {\n    case constants.groupResourceType:\n      text = \"folder\";\n      break;\n    case constants.rawFileResourceType:\n      text = \"raw file\";\n      break;\n    case constants.widgetVisualisationResourceType:\n      text = \"widget visualisation\";\n      break;\n    case constants.timeSeriesVisualisationResourceType:\n      text = \"time series visualisation\";\n      break;\n    case constants.mapVisualisationResourceType:\n      text = \"map visualisation\";\n      break;\n    case constants.statusVisualisationResourceType:\n      text = \"status visualisation\";\n      break;\n    case constants.scheduledTasksResourceType:\n      text = \"scheduled tasks\";\n      break;\n    case constants.processHostsResourceType:\n      text = \"process hosts\";\n      break;\n    default:\n      // Most single word resource types are OK.\n      text = type;\n      break;\n  }\n  return text;\n};\n\nconst getShareModeText = function(shareMode) {\n  let display;\n  switch (shareMode) {\n    case constants.publicRWShareMode:\n      display = \"public view and edit\";\n      break;\n    case constants.publicROShareMode:\n      display = \"public view, trusted edit\";\n      break;\n    case constants.trustedShareMode:\n      display = \"trusted only\";\n      break;\n    default:\n      display = \"!!unknown!!\";\n      break;\n  }\n  return display;\n};\n\nconst primaryKeyFromFlattened = function(resource, datum) {\n  // Create primary key from flattened data.\n  const key = {};\n  _.forEach(resource.schemaDefinition.uniqueIndex, (idx) => {\n    const keyField = idx.asc || idx.desc;\n    key[keyField] = datum[keyField];\n  });\n\n  return key;\n};\n\n// Users root folder.\nconst getAccountRootId = function(accountId) {\n  return specialFolderId(constants.rootFolderPrefix, accountId);\n};\n\n// Folder containing all 'pure' resources belonging to the user.\nconst getResourceRootId = function(accountId) {\n  return specialFolderId(constants.resourceRootFolderPrefix, accountId);\n};\n\n// Folder containing all application-specific data for the user.\nconst getApplicationRootId = function(accountId) {\n  return specialFolderId(constants.applicationRootFolderPrefix, accountId);\n};\n\n// Folder containing application definitions created by the user.\nconst getApplicationDefinitionId = function(accountId) {\n  return specialFolderId(constants.applicationDefinitionFolderPrefix, accountId);\n};\n\n// Folder containing a users application data.\nconst getApplicationDataId = function(accountId) {\n  return specialFolderId(constants.applicationDataFolderPrefix, accountId);\n};\n\n// Folder containing all databot-specific data for the user.\nconst getDatabotRootId = function(accountId) {\n  return specialFolderId(constants.databotRootFolderPrefix, accountId);\n};\n\n//\n// Gets the default parent for a given resource type.\n// This is used when a resource is created with no parent specified.\n//\nconst getDefaultResourceParent = function(accountId, baseType) {\n  let rootId;\n  switch (baseType) {\n    case constants.datasetResourceType:\n      rootId = getResourceRootId(accountId);\n      break;\n    case constants.applicationBaseType:\n      rootId = getApplicationRootId(accountId);\n      break;\n    case constants.databotBaseType:\n      rootId = getDatabotRootId(accountId);\n      break;\n    default:\n      // Do nothing\n      break;\n  }\n  return rootId;\n};\n\nconst isPureResource = function(baseType) {\n  return pureResourceTypes.indexOf(baseType) >= 0;\n};\n\nconst specialFolderId = function(prefix, accountId) {\n  return shortHash.unique(prefix + accountId);\n};\n\nexport default {\n  getAccountRootId: getAccountRootId,\n  getApplicationRootId: getApplicationRootId,\n  getDatabotRootId: getDatabotRootId,\n  getApplicationDataId: getApplicationDataId,\n  getApplicationDefinitionId: getApplicationDefinitionId,\n  getDefaultResourceParent: getDefaultResourceParent,\n  getResourceRootId: getResourceRootId,\n  getResourceTypeText: getResourceTypeText,\n  getShareModeText: getShareModeText,\n  isPureResource: isPureResource,\n  isResourceType: isResourceType,\n  primaryKeyFromFlattened: primaryKeyFromFlattened,\n  specialFolderId: specialFolderId,\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/resource-utils.js","/* eslint-disable no-underscore-dangle */\nimport debug from \"debug\";\nimport _ from \"lodash\";\nimport constants from \"./constants\";\n\nconst log = debug(\"nqm-core-utils:build-data-key\");\nconst errLog = debug(\"nqm-core-utils:build-data-key:error\");\n\n// From mongoose/lib/schema.js\nconst reservedFieldNames = [\n  \"_id\",              // <---- TDX specific\n  \"prototype\",\n  // EventEmitter\n  \"emit\",\n  \"on\",\n  \"once\",\n  \"listeners\",\n  \"removeListener\",\n  // document properties and functions\n  \"collection\",\n  \"db\",\n  \"errors\",\n  \"init\",\n  \"isModified\",\n  \"isNew\",\n  \"get\",\n  \"modelName\",\n  \"save\",\n  \"schema\",\n  \"set\",\n  \"toObject\",\n  \"validate\",\n  \"remove\",\n  // hooks.js\n  \"_pres\",\n  \"_posts\",\n];\n\n// Convert from simple array list to TDX index format.\n// Assume ascending sort direction.\n// e.g. [\"id\", \"code\"] => [{asc: \"id\"}, {asc: \"code\"}]\n//\n// Will also convert from mongoose index spec to tdx format.\n// e.g. {id: 1, code: -1} => [{asc: \"id\"}, {desc: \"code\"}]\n//\nconst indexToTDX = function(indexFields, errList) {\n  const tdxIndex = [];\n\n  if (Array.isArray(indexFields)) {\n    _.forEach(indexFields, function(fieldSpec) {\n      if (typeof fieldSpec === \"string\") {\n        tdxIndex.push({\"asc\": fieldSpec});\n      } else if (fieldSpec.asc || fieldSpec.desc) {\n        tdxIndex.push(fieldSpec);\n      } else {\n        errList.push(`invalid index spec: ${JSON.stringify(fieldSpec)}`);\n      }\n    });\n  } else if (typeof indexFields === \"object\") {\n    _.forEach(indexFields, function(sortDirection, key) {\n      if (sortDirection === -1) {\n        tdxIndex.push({desc: key});\n      } else {\n        tdxIndex.push({asc: key});\n      }\n    });\n  }\n\n  return tdxIndex;\n};\n\nconst indexToMongoose = function(index) {\n  const mongooseIndex = {};\n  _.forEach(index, function(i) {\n    mongooseIndex[i.asc || i.desc] = (i.asc ? 1 : -1);\n  });\n\n  return mongooseIndex;\n};\n\nconst validateTDXType = function(type, errList) {\n  let properType;\n  type = type.toLowerCase();\n  if (!constants.mongooseTypes[type]) {\n    errList.push(`invalid base type: ${type}`);\n  } else {\n    properType = type;\n  }\n  return properType;\n};\n\n// Converts a schema from mongoose to TDX format.\nconst schemaToTDX = function(schema, errList) {\n  if (typeof schema === \"object\") {\n    _.forEach(schema, function(value, key) {\n      if (key === \"__tdxType\") {\n        // Ensure array type list.\n        schema.__tdxType = [].concat(value);\n      } else if (key === \"type\") {\n        // Convert to TDX format.\n        if (typeof value === \"string\") {\n          // A mongoose-style type specification, e.g. {\"name\": {\"type\": \"string\"}}\n          // A literal type spec - convert to array type spec.\n          schema.__tdxType = [validateTDXType(value, errList)];\n          delete schema.type;\n        } else if (Array.isArray(value)) {\n          // An array type spec.\n          if (value.length) {\n            if (typeof value[0] === \"object\") {\n              // A type specification for a type named 'type' as an array, groan...\n              // e.g. {type: [{type: \"string\"}]} - an array of strings\n              schema[key] = schemaToTDX(value, errList);\n            } else {\n              // A mixed mongoose/TDX type specification, e.g. {\"name\": {\"type\": [\"string\", \"resourceId\", \"datasetId\"]}}\n              // A TDX-style list of vocab hierarchy => already TDX format, but validate root type\n              validateTDXType(value[0], errList);\n              schema.__tdxType = value;\n              delete schema.type;\n            }\n          } else {\n            // An emtpy array for the 'type' key => assume a 'mixed' mongoose type.\n            schema[key] = [];\n          }\n        } else if (typeof value === \"object\") {\n          // An object spec => recurse\n          schema[key] = schemaToTDX(value, errList);\n        } else {\n          errList.push(`invalid schema definition, invalid 'type' spec: ${schema}`);\n        }\n      } else if (key === \"__tdxRequired\" || key === \"__tdxDefault\" || key === \"__tdxDescription\") {\n        // Do nothing.\n      } else if (Array.isArray(value)) {\n        if (value.length === 1) {\n          value[0] = schemaToTDX(value[0], errList);\n        } else if (value.length) {\n          // Multi-value array => a mongoose-style TDX vocab list, e.g. {cost: [\"number\", \"currency\"]}\n          schema[key] = {__tdxType: value};\n        } else {\n          // Assume a 'mixed' mongoose type.\n          schema[key] = [];\n        }\n      } else if (typeof value === \"object\") {\n        // Recurse for sub-documents\n        schema[key] = schemaToTDX(value, errList);\n      } else if (typeof value === \"string\") {\n        // An implied type spec, e.g. {name: \"string\"} - convert to TDX\n        schema[key] = {__tdxType: [validateTDXType(value, errList)]};\n      } else {\n        errList.push(`invalid schema definition, unexpected: ${schema}`);\n      }\n    });\n\n    return schema;\n  } else if (typeof schema === \"string\") {\n    return {__tdxType: [validateTDXType(schema, errList)]};\n  } else {\n    errList.push(`invalid schema definition, unexpected: ${schema}`);\n  }\n};\n\nconst validateMongooseType = function(type, errList) {\n  let properType;\n  type = type.toLowerCase();\n  if (!constants.mongooseTypes[type]) {\n    errList.push(`invalid base type: ${type}`);\n  } else {\n    properType = _.capitalize(type);\n  }\n  return properType;\n};\n\nconst schemaToMongoose = function(schema, errList, forDisplay) {\n  errList = errList || [];\n\n  _.each(schema, function(v, k) {\n    if (reservedFieldNames.indexOf(k) >= 0) {\n      errLog(\"invalid field name (reserved): %s\", k);\n      errList.push(`invalid field name (reserved): ${k}`);\n    } else if (k === \"__tdxRequired\") {\n      schema.required = schema.__tdxRequired;\n      delete schema.__tdxRequired;\n    } else if (k === \"__tdxDefault\") {\n      schema.default = schema.__tdxDefault;\n      delete schema.__tdxDefault;\n    } else if (k === \"__tdxDescription\") {\n      if (forDisplay) {\n        // Include the description if for display\n        schema.description = schema.__tdxDescription;\n      }\n      // Remove this as it's TDX documentation.\n      delete schema.__tdxDescription;\n    } else if (k === \"__tdxType\") {\n      // This is an explicit type specification,  e.g. { __tdxType: [\"string\",\"geographic\",\"address\",\"postcode\"]}\n      if (!v) {\n        errLog(\"unexpected __tdxType value: %j\", v);\n        errList.push(\"missing __tdxType\");\n      } else {\n        // Ensure type is an array.\n        v = [].concat(v);\n        delete schema.__tdxType;\n        // The base type is the first element and should be a valid mongoose type\n        schema.type = v[0].toLowerCase();\n        if (schema.type === \"object\") {\n          schema = {};\n        } else if (schema.type === \"array\") {\n          schema = [];\n        } else {\n          schema.type = validateMongooseType(schema.type, errList);\n        }\n      }\n    } else if (Array.isArray(v)) {\n      // Array\n      if (v.length > 1) {\n        errList.push(`invalid array type specification for key: ${k}`);\n      } else if (v.length > 0) {\n        if (typeof v[0] === \"string\") {\n          // Array of single type.\n          schema[k] = [{type: validateMongooseType(v[0], errList)}];\n        } else {\n          // Array of sub-document spec.\n          schema[k] = [schemaToMongoose(v[0], errList, forDisplay)];\n        }\n      }\n    } else if (typeof v === \"object\") {\n      // Sub-document\n      schema[k] = schemaToMongoose(v, errList, forDisplay);\n    } else if (typeof v !== \"string\") {\n      // TODO - review\n      // Don't treat this as an error, just ignore.\n      // Seems to be caused be some legacy schema definitions with { default: true, required: true } etc.\n      // errList.push(\"invalid schema definition - unexpected type for key '\" + k + \"': \" + (typeof v));\n      errLog(`invalid schema definition - unexpected type for key '${k}' : ${(typeof v)}`);\n      delete schema[k];\n    } else {\n      schema[k] = {type: validateMongooseType(v, errList)};\n    }\n  });\n\n  return schema;\n};\n\nconst definitionToMongoose = function(name, tdxSchema) {\n  const uniqueIndex = tdxSchema.uniqueIndex;\n  const indexes = tdxSchema.nonUniqueIndexes;\n\n  // Convert any given indexes to mongodb format\n  //\n  // Because these dynamic schema definitions are stored in mongodb as documents,\n  // we have to store them in a backwards fashion as mongodb does not allow\n  // key names to contain periods. For example, if the index was saved\n  // as { \"address.postcode\": 1 } mongodb would complain about \"address.postcode\".\n  //\n  // So we store indexes (which are likely to contain dots e.g. if indexing\n  // on nested document) in the form:\n  //\n  // { \"asc\": \"my.nested.key\" } or { \"desc\": \"address.postcode\" }\n  //\n  // Here we convert this stored format to mongodb format so the index can be created.\n  //\n  // The 'indexes' parameter should be an array of arrays of index specifiers, e.g.\n  // the following specifies two indexes, one is a compound index on account and order,\n  // the other is an individual index on completedAt:\n  //\n  // [ [ { \"asc\": \"account\" }, { \"asc\": \"order\" } ], [ {\"asc\": \"completedAt\" } ] ]\n  //\n  // this should translate to a single array of objects, e.g.:\n  //\n  // [ { account: 1 , order: 1 }, { completedAt: 1} ]\n  //\n  const nonUniqueIndexes = [];\n  _.forEach(indexes, function(nonUniqueIndex) {\n    if (nonUniqueIndex.length > 0) {\n      nonUniqueIndexes.push(indexToMongoose(nonUniqueIndex));\n    }\n  });\n  log(\"translated non unique indexes for %s from %j to %j\", name, indexes, nonUniqueIndexes);\n\n  // Do the same for the unique index.\n  // Use the 'uniqueIndex' parameter to set the PK of the schema.\n  // Do this rather than use the built-in mongoose specification in order\n  // to support compound indexes, where the order of fields is important.\n  //\n  // See comment above for index format explanation.\n  const primaryIndex = indexToMongoose(uniqueIndex);\n  log(\"translated primary index for %s from %j to %j\", name, uniqueIndex, primaryIndex);\n\n  //\n  // Remove all index information from the schema, as we set the indexes\n  // manually below.\n  //\n  log(\"transforming schema for %s: %j\", tdxSchema.id, tdxSchema.dataSchema);\n  const errList = [];\n  const mongooseSchema = schemaToMongoose(tdxSchema.dataSchema, errList, false);\n  if (errList.length) {\n    throw new Error(`invalid mongoose schema: ${errList.join(\",\")}`);\n  }\n\n  log(\"schema transformed to %j\", mongooseSchema);\n\n  return {\n    schema: mongooseSchema,\n    uniqueIndex: primaryIndex,\n    nonUniqueIndexes: nonUniqueIndexes,\n  };\n};\n\nexport default {\n  definitionToMongoose: definitionToMongoose,\n  schemaToMongoose: function(tdxSchema, errList, forDisplay) {\n    return schemaToMongoose(_.cloneDeep(tdxSchema), errList, forDisplay);\n  },\n  schemaToTDX: function(mongooseSchema, errList) {\n    return schemaToTDX(_.cloneDeep(mongooseSchema), errList);\n  },\n  indexToMongoose: indexToMongoose,\n  indexToTDX: indexToTDX,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/schema-utils.js","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"shortid\"\n// module id = 9\n// module chunks = 0","/* eslint-disable max-len */\nimport {generate} from \"shortid\";\nimport constants from \"./constants\";\nimport resourceUtils from \"./resource-utils\";\nimport databotUtils from \"./databot-utils\";\nimport schemaUtils from \"./schema-utils\";\nimport flattenJSON from \"./flatten\";\nimport buildDataKey from \"./build-data-key\";\nimport {unique} from \"./short-hash\";\n\nconst isEmailValid = function(address) {\n  // TODO - improve this (use mailgun?)\n  return /^[A-Z0-9'.1234z_%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(address);\n};\n\nconst isHostNameValid = function(hostname) {\n  // From http://stackoverflow.com/a/106223\n  return /^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$/.test(hostname);\n};\n\nconst isDateValid = function(d) {\n  // From http://stackoverflow.com/q/1353684\n  if (Object.prototype.toString.call(d) !== \"[object Date]\")\n    return false;\n  return !isNaN(d.getTime());\n};\n\nconst isNumeric = function(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\nconst makeTDXAccount = function(email, tdx) {\n  /*\n   * tdx accounts are stored in email/hostname format, e.g. toby.ealden@gmail.com/tdx.nqminds.com\n   */\n  return `${email}/${tdx}`;\n};\n\nconst splitTDXAccount = function(username) {\n  /*\n   * tdx accounts are stored in email/hostname format, e.g. toby.ealden@gmail.com/tdx.nqminds.com\n   */\n  let result;\n  const split = username.toLowerCase().split(\"/\");\n  if (split.length === 2 && isEmailValid(split[0]) && (isHostNameValid(split[1]) || split[1].indexOf(\"localhost:\") === 0)) {\n    result = {\n      email: split[0],\n      tdx: split[1],\n    };\n  }\n  return result;\n};\n\n/**\n * TDX resources are stored in resourceId/hostname format, e.g. DhkDI-du/tdx.nqminds.com\n *\n * @param  {object|string} resource - the resource id or object\n * @param  {string} [tdx] - optional tdx id\n */\nconst makeTDXResource = function(resource, tdx) {\n  // Can handle resource as string or id.\n  if (typeof resource === \"object\") {\n    resource = resource.id;\n  }\n  if (splitTDXResource(resource).tdx) {\n    // The resource id is already fully qualified\n    return resource;\n  } else if (!resource || !tdx) {\n    // Invalid args - throw?\n    throw new Error(\"makeTDXResource: invalid args - must provide resource and tdx\");\n  } else {\n    return `${resource}/${tdx.toLowerCase()}`;\n  }\n};\n\n/**\n * Splits a resource identifier into component parts - local id and tdx id.\n *\n * TDX resources are stored in resourceId/hostname format, e.g. DhkDI-du/tdx.nqminds.com, but they\n * often omit the hostname portion, which indicates a resource local to the current tdx.\n *\n * @param  {string} resourceId\n */\nconst splitTDXResource = function(resourceId) {\n  /*\n   */\n  let result;\n  const split = resourceId.split(\"/\");\n  if (split.length === 2) {\n    if (isHostNameValid(split[1]) || split[1].indexOf(\"localhost:\") === 0) {\n      result = {\n        resourceId: split[0],\n        tdx: split[1],\n      };\n    } else {\n      // Hostname invalid - do nothing and return 'undefined'.\n    }\n  } else if (split.length === 1) {\n    // Assume a local resource - leave the tdx component empty\n    result = {\n      resourceId: split[0],\n    };\n  } else {\n    // Invalid number of components - do nothing and return 'undefined'\n  }\n\n  return result;\n};\n\nconst padNumber = function(n, width, z) {\n  z = z || \"0\";\n  n = `${n}`;\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n};\n\nconst parseFunction = function(funcText) {\n  const funcReg = /function *\\(([^()]*)\\)[ \\n\\t]*{(.*)}/gmi;\n  const match = funcReg.exec(funcText.replace(/\\n/g, \" \"));\n\n  if (match) {\n    return new Function(match[1].split(\",\"), match[2]);\n  }\n\n  return null;\n};\n\nexport {\n  buildDataKey,\n  constants,\n  databotUtils,\n  flattenJSON,\n  generate as shortId,\n  isEmailValid,\n  isDateValid,\n  isHostNameValid,\n  isNumeric,\n  makeTDXAccount,\n  makeTDXResource,\n  padNumber,\n  parseFunction,\n  resourceUtils,\n  schemaUtils,\n  splitTDXAccount,\n  splitTDXResource,\n  unique as shortHash,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_11__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongo-parse\"\n// module id = 11\n// module chunks = 0"],"sourceRoot":""}